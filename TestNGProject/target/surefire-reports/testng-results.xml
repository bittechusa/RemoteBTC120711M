<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="8" total="12" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="37" started-at="2020-12-06T12:34:26 EST" finished-at="2020-12-06T12:34:27 EST">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="37" started-at="2020-12-06T12:34:26 EST" finished-at="2020-12-06T12:34:27 EST">
      <class name="com.bit.test.DataDrivenTest">
        <test-method status="FAIL" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:com.bit.test.DataDrivenTest@4667ae56]" name="f" duration-ms="0" started-at="2020-12-06T12:34:27 EST" data-provider="dp" finished-at="2020-12-06T12:34:27 EST">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method public void com.bit.test.DataDrivenTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method public void com.bit.test.DataDrivenTest.f(java.lang.Integer,java.lang.String) requires a @DataProvider named : dp
at org.testng.internal.Parameters.findDataProvider(Parameters.java:559)
at org.testng.internal.Parameters.handleParameters(Parameters.java:772)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:789)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- com.bit.test.DataDrivenTest -->
      <class name="com.bit.test.RegressionTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.bit.test.RegressionTest@77cd7a0]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.bit.test.RegressionTest@77cd7a0]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:com.bit.test.RegressionTest@77cd7a0]" name="test2" duration-ms="1" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.bit.test.RegressionTest@77cd7a0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.bit.test.RegressionTest@77cd7a0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.bit.test.RegressionTest@77cd7a0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.bit.test.RegressionTest@77cd7a0]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="test3()[pri:0, instance:com.bit.test.RegressionTest@77cd7a0]" name="test3" duration-ms="0" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- com.bit.test.RegressionTest -->
      <class name="com.bit.test.BaseTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.bit.test.BaseTest@1a968a59]" name="beforeSuite" is-config="true" duration-ms="7" started-at="2020-12-06T12:34:26 EST" finished-at="2020-12-06T12:34:26 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.bit.test.BaseTest@1a968a59]" name="beforeTest" is-config="true" duration-ms="1" started-at="2020-12-06T12:34:26 EST" finished-at="2020-12-06T12:34:26 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.bit.test.BaseTest@1a968a59]" name="afterTest" is-config="true" duration-ms="1" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.bit.test.BaseTest@1a968a59]" name="afterSuite" is-config="true" duration-ms="1" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.bit.test.BaseTest -->
      <class name="com.bit.test.SmokeTest">
        <test-method status="PASS" signature="test1()[pri:0, instance:com.bit.test.SmokeTest@204f30ec]" name="test1" duration-ms="1" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.bit.test.SmokeTest@204f30ec]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.bit.test.SmokeTest@204f30ec]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.bit.test.SmokeTest@204f30ec]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.bit.test.SmokeTest@204f30ec]" name="afterClass" is-config="true" duration-ms="0" started-at="2020-12-06T12:34:27 EST" finished-at="2020-12-06T12:34:27 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.bit.test.SmokeTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
